#!/usr/bin/bash

# Author: Adrián Luján Muñoz (aka clhore)

function domainPasswordsettings(){
	ingles='Password complexity; Store plaintext passwords; Password history length; Minimum password length; Minimum password age(days); Maximum password age(days); Account lockout duration(mins); Account lockout threshold(attempts); Reset account lockout after(mins); Back'
	spain='Complejidad de la contraseña; Almacenar contraseñas de texto sin formato; Longitud del historial de contraseñas; Longitud mínima de la contraseña; Antigüedad mínima de la contraseña (días); Antigüedad máxima de la contraseña (días); Duración del bloqueo de la cuenta (minutos); Umbral de bloqueo de cuenta (intentos); Restablecer bloqueo de cuenta después de (mins); Atrás'

	languagesArray=("${ingles[@]}" "${spain[@]}"); infoPass=$(samba-tool domain passwordsettings show)

	value1=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $1}')
	value2=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $2}')
	value3=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $3}')
	value4=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $4}')
	value5=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $5}')
	value6=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $6}')
	value7=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $7}')
	value8=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $8}')
	value9=$(echo "$infoPass" | tail -n 9 | awk -F ': ' '{print $2}' | xargs | awk '{print $9}')

	local CHOICE=$(
	whiptail --title "dcControl - by Adrián Luján Muñoz" --menu "Password information" 16 100 9 \
                "1)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $1}') [$value1]" \
                "2)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $2}') [$value2]"  \
                "3)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $3}') [$value3]" \
                "4)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $4}') [$value4]" \
                "5)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $5}') [$value5]" \
                "6)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $6}') [$value6]" \
                "7)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $7}') [$value7]" \
                "8)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $8}') [$value8]" \
                "9)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $9}') [$value9]" \
		"10)" "Back"  3>&2 2>&1 1>&3
	)

	case $CHOICE in

		"1)")
			whiptail --title "dcControl - by Adrián Luján Muñoz" --yesno "Password complexity (Default on)" --yes-button "ON" --no-button "OFF" 8 40
			if [ $? -eq 1 ]; then local opp=off; else local opp=on; fi; samba-tool domain passwordsettings set --complexity=$opp
		;;

		"2)")
		        whiptail --title "dcControl - by Adrián Luján Muñoz" --yesno "Store plaintext passwords (Default off)" --yes-button "ON" --no-button "OFF" 8 40
                        if [ $? -eq 1 ]; then local opp=off; else local opp=on; fi; samba-tool domain passwordsettings set --store-plaintext=$opp
		;;

		"3)")
		        local opp=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "Password history length (Ej: 10):" 8 78 3>&1 1>&2 2>&3)
			if [[ "$opp" != "" && $opp -ge 0 && $opp -le 24 ]]; then samba-tool domain passwordsettings set --history-length=$opp; fi
		;;

		"4)")
			local opp=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "Minimum password length (Ej: 7):" 8 78 3>&1 1>&2 2>&3)
		        if [[ "$opp" != "" && $opp -ge 0 && $opp -le 14 ]]; then samba-tool domain passwordsettings set --min-pwd-length=$opp; fi
	        ;;

		"5)")
			local opp=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "Minimum password age (days) (Ej: 2):" 8 78 3>&1 1>&2 2>&3)
                        if [[ "$opp" != "" && $opp -ge 0 && $opp -le 42 ]]; then samba-tool domain passwordsettings set --min-pwd-age=$opp; fi
        	;;

		"6)")
			local opp=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "Maximum password age (days) (Ej: 14):" 8 78 3>&1 1>&2 2>&3)
                        if [[ "$opp" != "" && $opp -ge 0 && $opp -le 999 ]]; then samba-tool domain passwordsettings set --max-pwd-age=$opp; fi
       		 ;;

		"7)")
 			local opp=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "Account lockout duration (mins) (Ej: 14):" 8 78 3>&1 1>&2 2>&3)
                        if [[ "$opp" != "" && $opp -ge 0 && $opp -le 99999 ]]; then samba-tool domain passwordsettings set --account-lockout-duration=$opp; fi
		;;

		"8)")
			local opp=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "Account lockout threshold (Ej: 5):" 8 78 3>&1 1>&2 2>&3)
                        if [[ "$opp" != "" && $opp -ge 0 && $opp -le 65000 ]]; then samba-tool domain passwordsettings set --account-lockout-threshold=$opp; fi
		;;

		"9)")
			local opp=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "Reset account lockout after (mins) (Ej: 30):" 8 78 3>&1 1>&2 2>&3)
                        if [[ "$opp" != "" && $opp -ge 0 && $opp -le 99999 ]]; then samba-tool domain passwordsettings set --reset-account-lockout-after=$opp; fi
		;;

		"10)") return 1
		;;

	esac
}

function domain(){
	ingles='Password settings'
        spain='configuración de contraseña'
        languagesArray=("${ingles[@]}" "${spain[@]}")

        local CHOICE=$(
        whiptail --title "dcControl - by Adrián Luján Muñoz" --menu "Select an option" 20 80 10 \
                "1)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $1}')" \
		"2)" "Bask"  3>&2 2>&1 1>&3
        )

        case $CHOICE in
                "1)")
                        domainPasswordsettings
                ;;

                "2)") return 0
                ;;
        esac
}

function ou_list(){
	local OU_LIST=($(samba-tool ou list | xargs))

	printf 'whiptail --title "dcControl - by Adrián Luján Muñoz" --menu "Ruta donde se guardara el usuario" 15 60 6' > payloud
	for OU in "${OU_LIST[@]}"; do printf ' "%s" ""' $OU >> payloud; done

	/usr/bin/bash payloud 3>&1 1>&2 2>output
}

function user_list(){
        local USER_LIST=($(samba-tool user list | xargs))

        printf 'whiptail --title "dcControl - by Adrián Luján Muñoz" --menu "Select an option" 15 60 6' > payloud
        for USER in "${USER_LIST[@]}"; do printf ' "%s" ""' $USER >> payloud; done

	/usr/bin/bash payloud 2> output
}

function user_create_options(){
        cat user_options | tr -d '"' | tr ')' '\n' | tr -d ' ' > .tmp; local PAYLOUD=''

        while IFS= read -r OPT; do
                case $OPT in
                        "1")
                                local GIVE_NAME=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "User (given name) (Ej: Adrian):" 8 78 3>&1 1>&2 2>&3)
                                GIVE_NAME=$(printf "'%s'" "$GIVE_NAME"); PAYLOUD="$PAYLOUD --given-name=$GIVE_NAME"
                        ;;

                        "2")
                                local SURNAME=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "User (surname) (Ej: Lujan Muñoz):" 8 78 3>&1 1>&2 2>&3)
                                SURNAME=$(printf "'%s'" "$SURNAME"); PAYLOUD="$PAYLOUD --surname=$SURNAME"
                        ;;

                        "3")
                                local MAIL=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "User mail (Ej: user@user.es):" 8 78 3>&1 1>&2 2>&3)
                                MAIL=$(printf "'%s'" "$MAIL"); PAYLOUD="$PAYLOUD --mail=$MAIL"
                        ;;

			"4")
				ou_list; local OU_PATH=$(cat output); OU_PATH=$(printf "'%s'" "$OU_PATH")
				PAYLOUD="$PAYLOUD --userou=$OU_PATH"
                	;;
		esac
        done < .tmp ; rm .tmp

        echo -en "$PAYLOUD"
}

function user_create(){
        local OPT=''; rm user_options; whiptail --title "dcControl - by Adrián Luján Muñoz" --checklist \
	        "Options from users" 20 30 12 \
        	"1)" "(Given name) " OFF \
       		"2)" "(Surname) " OFF \
        	"3)" "(Mail) " OFF \
        	"4)" "(User ou path) " OFF 2> user_options

        test -f user_options; if [ $? -eq 0 ]; then OPT=$(user_create_options); fi

        local USER=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "User (Ej: a.lujan):" 8 78 3>&1 1>&2 2>&3)
        local PASSWORD=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --inputbox "User password (Ej: P@ssw0rd):" 8 78 3>&1 1>&2 2>&3)

	echo -e "samba-tool user add $USER $PASSWORD${OPT}" > .tmp; bash .tmp &>/dev/null

        if [ $? -eq 0 ]; then whiptail --title "dcControl - by Adrián Luján Muñoz" --msgbox "Usuario creado correctamente [$USER]" 8 60 6
        else whiptail --title "dcControl - by Adrián Luján Muñoz" --msgbox "Error al intentar crear el usuario [$USER]" 8 60 6; fi; rm .tmp &>/dev/null
}

function user_delete(){
	user_list; local USER=$(cat output); samba-tool user delete $USER &>/dev/null

	if [ $? -eq 0 ]; then whiptail --title "dcControl - by Adrián Luján Muñoz" --msgbox "Usuario eliminado correctamente [$USER]" 8 60 6
	else whiptail --title "dcControl - by Adrián Luján Muñoz" --msgbox "Error al intentar eliminar el usuario [$USER]" 8 60 6; fi
}

function user(){
	ingles='List users; Create user; User delete'
        spain='Listar usuarios; Crear usuario; Eliminar usuario'
        languagesArray=("${ingles[@]}" "${spain[@]}")

        local CHOICE=$(
        whiptail --title "dcControl - by Adrián Luján Muñoz" --menu "Select an option" 20 80 10 \
                "1)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $1}')" \
                "2)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $2}')" \
		"3)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $3}')" \
		"4)" "Bask"  3>&2 2>&1 1>&3
        )

        case $CHOICE in
                "1)")
                        user_list
                ;;

                "2)")
                        user_create
                ;;

		"3)")
			user_delete
		;;

                "4)") return 0
                ;;
        esac
}

function menu(){
#samba-tool user setpassword user-prueba --newpassword=P@ssw0rd
        ingles='users        - Create, Add RFC2307 attributes, etc.; domain        - Admin setting domain; computer        - Create, delete, list'
	spain='usuarios        - Crea, añade atributos RFC2307; dominio        - administra su configuracion; computer        - Crea, elimina, lista'
        languagesArray=("${ingles[@]}" "${spain[@]}")

        local CHOICE=$(
        whiptail --title "dcControl - by Adrián Luján Muñoz" --menu "Select an option" 15 60 6 \
                "1)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $1}')" \
                "2)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $2}')"  \
                "3)" "$(echo ${languagesArray[$numArray]} | awk -F '; ' '{print $3}')" \
		"4)" "exit"  3>&2 2>&1 1>&3
	)

        case $CHOICE in

                "1)")
			user
                ;;

                "2)")
			domain
                ;;

		"3)")
			echo computer
                ;;

                "4)") exit 0
		;;
	esac
}

function main(){
	while :
	do
		menu
	done
}

if [ "$(id -u)" == "0" ]; then
	optLanguage=$(whiptail --title "dcControl - by Adrián Luján Muñoz" --menu "Select your idiom:" 10 40 2 "1)" "Spain" "2)" "English"  3>&2 2>&1 1>&3)

	case $optLanguage in
		"1)") declare -r numArray=1;; "2)") declare -r numArray=0;;
	esac; main
else
	echo 'not root user'
fi
